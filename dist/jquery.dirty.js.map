{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/jquery.d.ts","src/jquery.dirty.d.ts","src/jquery.dirty.ts"],"names":[],"mappings":"AAAA;ACAA;AACA;;ACDA;AACA;;;;;;;ACAA;AAEA;IACA,K;AAeI;;;AAGA,eAAY,IAAZ,EAAsC,OAAtC,EAAgE;AAAA;;AAAA;;AAdxD,SAAA,KAAA,GAAQ,OAAR;AACA,SAAA,KAAA,GAAQ,OAAR;AACA,SAAA,gBAAA,GAAmB,mBAAnB;AACA,SAAA,WAAA,GAAc,SAAd;AAiCD,SAAA,IAAA,GAAO,YAAK;AACf,cAAK,iBAAL;AACA,cAAK,SAAL;AACH,KAHM;AAKA,SAAA,iBAAA,GAAoB,YAAoE;AAC3F,YAAI,WAA0E,EAA9E;AAEA,YAAI,SAAsC,MAAK,IAAL,CAAU,CAAV,EAAa,gBAAb,CAA8B,OAA9B,CAA1C;AACA,YAAI,UAAwC,MAAK,IAAL,CAAU,CAAV,EAAa,gBAAb,CAA8B,QAA9B,CAA5C;AACA,YAAI,YAA4C,MAAK,IAAL,CAAU,CAAV,EAAa,gBAAb,CAA8B,UAA9B,CAAhD;AAEA,aAAK,IAAI,QAAe,CAAxB,EAA2B,QAAQ,OAAO,MAA1C,EAAkD,OAAlD,EAA2D;AACvD,qBAAS,IAAT,CAAc,OAAO,KAAP,CAAd;AACH;AAED,aAAK,IAAI,SAAe,CAAxB,EAA2B,SAAQ,QAAQ,MAA3C,EAAmD,QAAnD,EAA4D;AACxD,qBAAS,IAAT,CAAc,QAAQ,MAAR,CAAd;AACH;AAED,aAAK,IAAI,UAAe,CAAxB,EAA2B,UAAQ,UAAU,MAA7C,EAAqD,SAArD,EAA8D;AAC1D,qBAAS,IAAT,CAAc,UAAU,OAAV,CAAd;AACH;AAED,eAAO,QAAP;AACH,KApBM;AAsBA,SAAA,iBAAA,GAAoB,UAAC,EAAD,EAAwB;AAC/C,eAAO,CAAC,OAAD,EAAU,UAAV,EAAsB,IAAtB,CAA2B;AAAA,mBAAK,MAAM,GAAG,IAAd;AAAA,SAA3B,CAAP;AACH,KAFM;AAIA,SAAA,WAAA,GAAc,UAAC,EAAD;AAAA,eAAyB,GAAG,IAAH,KAAY,MAArC;AAAA,KAAd;AAEA,SAAA,eAAA,GAAkB,YAAK;AAC1B,cAAK,IAAL,CAAU,EAAV,CAAa,QAAb,EAAuB;AAAA,mBAAM,MAAK,UAAL,GAAkB,IAAxB;AAAA,SAAvB;AAEA,YAAI,MAAK,OAAL,CAAa,cAAjB,EAAiC;AAC7B,cAAE,MAAF,EAAU,EAAV,CAAa,cAAb,EAA6B,YAAK;AAC9B,oBAAI,MAAK,OAAL,IAAgB,CAAC,MAAK,UAA1B,EAAsC;AAClC,2BAAO,MAAK,OAAL,CAAa,cAApB;AACH;AACJ,aAJD;AAKH;AACJ,KAVM;AAYA,SAAA,0BAAA,GAA6B,YAAK;AACrC,cAAK,IAAL,CAAU,IAAV,CAAe,yBAAf,EAA0C,EAA1C,CAA6C,iCAA7C,EAAgF,UAAC,CAAD,EAAM;AAClF,cAAE,KAAF,EAAQ,OAAR,CAAgB,EAAE,IAAF,GAAS,QAAzB;AACH,SAFD;AAGH,KAJM;AAMA,SAAA,mBAAA,GAAsB,YAAK;AAC9B,cAAK,IAAL,CAAU,IAAV,CAAe,yBAAf,EAA0C,EAA1C,CAA6C,+DAA7C,EAA8G,UAAC,CAAD,EAAM;AAChH,kBAAK,WAAL,CAAiB,CAAjB;AACH,SAFD;AAIA,cAAK,IAAL,CAAU,EAAV,CAAa,OAAb,EAAsB;AAAA,mBAAM,MAAK,OAAL,CAAa,OAAb,EAAN;AAAA,SAAtB;AACA,cAAK,IAAL,CAAU,EAAV,CAAa,OAAb,EAAsB;AAAA,mBAAM,MAAK,OAAL,CAAa,OAAb,EAAN;AAAA,SAAtB;AACH,KAPM;AASA,SAAA,qBAAA,GAAwB,YAAK;AAChC,cAAK,IAAL,CAAU,IAAV,CAAe,yBAAf,EAA0C,GAA1C,CAA8C,+DAA9C;AACA,cAAK,IAAL,CAAU,GAAV,CAAc,OAAd;AACA,cAAK,IAAL,CAAU,GAAV,CAAc,OAAd;AACH,KAJM;AAMA,SAAA,iBAAA,GAAqB,YAAK;AAC7B,cAAK,iBAAL,GAAyB,OAAzB,CAAiC,UAAC,CAAD,EAAiE;AAE9F,gBAAI,oBAA4B,MAAK,iBAAL,CAAyC,CAAzC,CAAhC;AACA,gBAAI,SAAiB,MAAK,WAAL,CAAmC,CAAnC,CAArB;AAEA,gBAAI,iBAAJ,EAAuB;AACnB,oBAAI,YAAmB,EAAE,CAAF,EAAK,EAAL,CAAQ,UAAR,IAAsB,SAAtB,GAAkC,WAAzD;AACA,kBAAE,CAAF,EAAK,IAAL,CAAU,MAAK,gBAAf,EAAiC,SAAjC;AACH,aAHD,MAGO,IAAG,MAAH,EAAW;AACd,kBAAE,CAAF,EAAK,IAAL,CAAU,MAAK,gBAAf,EAAiC,KAAK,SAAL,CAAkC,EAAG,KAArC,CAAjC;AACH,aAFM,MAEA;AACH,kBAAE,CAAF,EAAK,IAAL,CAAU,MAAK,gBAAf,EAAiC,EAAE,CAAF,EAAK,GAAL,MAAc,EAA/C;AACH;AACJ,SAbD;AAcH,KAfM;AAiBA,SAAA,aAAA,GAAe,YAAK;AACvB,cAAK,qBAAL;AACA,cAAK,mBAAL;AACH,KAHM;AAKA,SAAA,eAAA,GAAkB,YAAqE;AAC1F,eAAO,MAAK,iBAAL,GAAyB,MAAzB,CAAgC,UAAC,CAAD,EAAiE;AACpG,mBAAO,EAAE,CAAF,EAAK,IAAL,CAAU,SAAV,CAAP;AACH,SAFM,CAAP;AAGH,KAJM;AAMA,SAAA,SAAA,GAAY,YAAK;AACpB,cAAK,eAAL;AACA,cAAK,mBAAL;AACA,cAAK,0BAAL;AACH,KAJM;AAMA,SAAA,YAAA,GAAe,UAAC,KAAD,EAAsE;AAExF,YAAI,SAAgB,EAAE,KAAF,CAApB;AAEA;AACA,YAAI,eAAsB,OAAO,IAAP,CAAY,MAAK,gBAAjB,CAA1B;AACA,YAAI,gBAAgB,IAApB,EAA0B;AAAE,2BAAe,EAAf;AAAoB;AAEhD,YAAI,eAAsB,OAAO,GAAP,EAA1B;AACA,YAAI,gBAAgB,IAApB,EAA0B;AAAE,2BAAe,EAAf;AAAoB;AAEhD;AACA;AACA,YAAI,YAAmB,iBAAvB;AACA,YAAI,cAAsB,UAAU,IAAV,CAAe,YAAf,KAAgC,UAAU,IAAV,CAAe,YAAf,CAA1D;AACA,YAAI,WAAJ,EAAiB;AACb,gBAAI,QAAe,IAAI,MAAJ,CAAW,MAAM,YAAN,GAAqB,GAAhC,EAAqC,GAArC,CAAnB;AACA,mBAAO,CAAC,MAAM,IAAN,CAAW,YAAX,CAAR;AACH;AAED,eAAO,iBAAiB,YAAxB;AACH,KArBM;AAuBA,SAAA,gBAAA,GAAkB,UAAC,KAAD,EAA4B;AACjD,YAAI,eAAsB,EAAE,KAAF,EAAS,IAAT,CAAc,MAAK,gBAAnB,CAA1B;AACA,YAAI,eAAsB,KAAK,SAAL,CAAe,MAAM,KAArB,CAA1B;AAEA,eAAO,iBAAiB,YAAxB;AACH,KALM;AAOA,SAAA,eAAA,GAAiB,UAAC,KAAD,EAA4B;AAChD,YAAI,eAAsB,EAAE,KAAF,EAAS,IAAT,CAAc,MAAK,gBAAnB,CAA1B;AACA,YAAI,eAAsB,MAAM,OAAN,GAAgB,SAAhB,GAA4B,WAAtD;AAEA,eAAO,iBAAiB,YAAxB;AACH,KALM;AAOA,SAAA,cAAA,GAAiB,UAAC,CAAD,EAAkE;AAEtF,YAAI,cAAsB,KAA1B;AAEA,YAAI,UAAkB,aAAa,gBAAnC;AACA,YAAI,OAAJ,EAAa;AACT,gBAAI,KAAwC,CAA5C;AACA,gBAAI,oBAA4B,MAAK,iBAAL,CAAuB,EAAvB,CAAhC;AACA,gBAAI,SAAiB,MAAK,WAAL,CAAiB,EAAjB,CAArB;AAGA,gBAAI,iBAAJ,EAAuB;AACnB,8BAAc,MAAK,eAAL,CAAqB,EAArB,CAAd;AACH,aAFD,MAEO,IAAI,MAAJ,EAAY;AACf,8BAAc,MAAK,gBAAL,CAAsB,EAAtB,CAAd;AACH,aAFM,MAEA;AACH,8BAAc,MAAK,YAAL,CAAkB,CAAlB,CAAd;AACH;AACJ;AAED,eAAO,WAAP;AAEH,KAtBM;AAwBA,SAAA,WAAA,GAAc,UAAC,CAAD,EAAuC;AAExD,YAAI,WAA0E,MAAK,iBAAL,EAA9E;AACA,YAAI,cAAsB,MAAK,OAA/B;AAEA,iBAAS,OAAT,CAAiB,UAAC,EAAD,EAAO;AACpB,gBAAI,cAAsB,MAAK,cAAL,CAAoB,EAApB,CAA1B;AAEA,cAAE,EAAF,EAAM,IAAN,CAAW,MAAK,WAAhB,EAA6B,WAA7B;AAEA,0BAAc,eAAe,WAA7B;AACH,SAND;AAQA,YAAI,WAAJ,EAAiB;AACb,kBAAK,UAAL;AACH,SAFD,MAEO;AACH,kBAAK,UAAL;AACH;AAED,YAAI,CAAJ,EAAO;AACH,cAAE,wBAAF;AACH;AACJ,KAtBM;AAwBP,SAAA,QAAA,GAAW,YAAK;AACZ,cAAK,OAAL,GAAe,IAAf;AACA,cAAK,OAAL,CAAa,CAAb,IAAkB,MAAK,OAAL,CAAa,CAAb,CAAlB;AACA,cAAK,OAAL,CAAa,CAAb,IAAkB,MAAK,KAAvB;AAEA,YAAI,MAAK,OAAL,CAAa,sBAAb,IAAuC,MAAK,YAAL,EAA3C,EAAgE;AAC5D,kBAAK,IAAL,CAAU,OAAV,CAAkB,OAAlB;AACH;AACJ,KARD;AAUA,SAAA,QAAA,GAAW,YAAK;AACZ,cAAK,OAAL,GAAe,KAAf;AACA,cAAK,OAAL,CAAa,CAAb,IAAkB,MAAK,OAAL,CAAa,CAAb,CAAlB;AACA,cAAK,OAAL,CAAa,CAAb,IAAkB,MAAK,KAAvB;AAEA,YAAI,MAAK,OAAL,CAAa,sBAAb,IAAuC,MAAK,YAAL,EAA3C,EAAgE;AAC5D,kBAAK,IAAL,CAAU,OAAV,CAAkB,OAAlB;AACH;AACJ,KARD;AAUQ,SAAA,YAAA,GAAe;AAAA,eAAO,MAAK,OAAL,CAAa,CAAb,MAAoB,MAAK,KAAhC;AAAA,KAAf;AAEA,SAAA,YAAA,GAAe;AAAA,eAAO,MAAK,OAAL,CAAa,CAAb,MAAoB,MAAK,KAAhC;AAAA,KAAf;AAED,SAAA,UAAA,GAAa,YAAK;AACrB,cAAK,iBAAL;AACA,cAAK,QAAL;AACH,KAHM;AAKA,SAAA,UAAA,GAAa,YAAK;AACrB,cAAK,QAAL;AACH,KAFM;AAIA,SAAA,SAAA,GAAY,YAAK;AACpB,cAAK,iBAAL,GAAyB,OAAzB,CAAiC,UAAC,CAAD,EAAiE;AAE9F,gBAAI,KAAyB,EAAE,CAAF,CAA7B;AACA,gBAAI,oBAA4B,MAAK,iBAAL,CAAyC,CAAzC,CAAhC;AACA,gBAAI,cAAsB,MAAK,WAAL,CAAmC,CAAnC,CAA1B;AAEA,gBAAI,iBAAJ,EAAuB;AACnB,oBAAI,sBAA6B,GAAG,IAAH,CAAQ,MAAK,gBAAb,CAAjC;AACA,oBAAI,YAAoB,wBAAwB,SAAhD;AAEA,mBAAG,IAAH,CAAQ,SAAR,EAAmB,SAAnB;AACH,aALD,MAKO,IAAG,WAAH,EAAgB;AACnB,oBAAI,KAAsB,CAA1B;AACA,mBAAG,KAAH,GAAW,IAAI,QAAJ,EAAX;AACH,aAHM,MAGA;AACH,oBAAI,QAAe,GAAG,IAAH,CAAQ,MAAK,gBAAb,CAAnB;AACA,mBAAG,GAAH,CAAO,KAAP;AACH;AACJ,SAlBD;AAoBA,cAAK,WAAL;AACH,KAtBM;AA/OH,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAe,KAAf;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,OAAL,GAAe,CAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,CAAf,CAJ4D,CAInB;AACzC,SAAK,EAAL,GAAU,EAAE,IAAF,EAAQ,IAAR,CAAa,IAAb,CAAV;AACA,SAAK,UAAL,GAAkB,KAAlB;AACA,UAAM,QAAN,CAAe,IAAf,CAAoB,IAApB;AACH,C;;AAxBc,MAAA,QAAA,GAAqB,EAArB;AA0BD,MAAA,cAAA,GAAoC;AAC9C,oBAAgB,KAD8B;AAE9C,oBAAgB,iFAF8B;AAG9C,aAAS,EAAE,IAHmC;AAI9C,aAAS,EAAE,IAJmC;AAK9C,4BAAwB;AALsB,CAApC;AAQA,MAAA,YAAA,GAAe,UAAC,EAAD,EAAoB;AAC7C,WAAO,MAAM,QAAN,CAAe,IAAf,CAAoB,UAAC,CAAD,EAAI,CAAJ;AAAA,eAAU,EAAE,EAAF,KAAS,EAAnB;AAAA,KAApB,CAAP;AACH,CAFa;AAuPlB;;;;;;;AAQA,CAAC,UAAS,CAAT,EAAmB,CAAnB,EAAiC;AAC9B;AACA,QAAI,CAAC,CAAL,EAAQ;AAAE,eAAO,KAAP;AAAe;AAEzB,WAAO,cAAP,CAAsB,EAAE,EAAxB,EAA4B,OAA5B,EAAqC;AACjC,eAAO,eAAsB,OAAtB,EAA0D;AAE7D,qBAAA,QAAA,CAAkB,CAAlB,EAA6C;AACzC,uBAAO,OAAO,CAAP,KAAa,QAApB;AACH;AAED,gBAAI,SAAS,OAAT,CAAJ,EAAuB;AAEnB,oBAAI,IAAU,MAAM,YAAN,CAAmB,EAAE,IAAF,EAAQ,IAAR,CAAa,IAAb,CAAnB,CAAd;AAEA,oBAAI,MAAM,SAAV,EAAqB;AACjB,wBAAI,IAAI,KAAJ,CAAU,EAAE,IAAF,CAAV,EAAmB,MAAM,cAAzB,CAAJ;AACA,sBAAE,IAAF;AACH;AAED,oBAAI,mBAA0B,QAAQ,WAAR,EAA9B;AAEA,wBAAQ,gBAAR;AACA,yBAAK,SAAL;AACI,+BAAO,CAAC,EAAE,OAAV;AACJ,yBAAK,SAAL;AACI,+BAAO,EAAE,OAAT;AACJ,yBAAK,eAAL;AACI,0BAAE,aAAF;AACJ,yBAAK,WAAL;AACI,0BAAE,SAAF;AACJ,yBAAK,YAAL;AACI,+BAAO,EAAE,UAAF,EAAP;AACJ,yBAAK,YAAL;AACI,+BAAO,EAAE,UAAF,EAAP;AACJ,yBAAK,iBAAL;AACI,+BAAO,EAAE,eAAF,EAAP;AACJ;AACI,gCAAQ,GAAR,CAAY,qBAAqB,OAAjC;AAhBJ;AAkBH,aA7BD,MA6BO;AACH;AACA,oBAAI,WAA8B,MAAM,cAAxC;AAEA;AACA,oBAAI,OAA0B,EAAE,MAAF,CAAS,EAAT,EAAa,QAAb,EAAuB,OAAvB,CAA9B;AAEA,uBAAO,KAAK,IAAL,CAAU,UAAS,CAAT,EAAmB,CAAnB,EAAgC;AAC7C,wBAAI,UAA6B,EAAE,MAAF,CAAS,EAAT,EAAa,QAAb,EAAuB,IAAvB,CAAjC;AACA,wBAAI,QAAc,IAAI,KAAJ,CAAU,EAAE,CAAF,CAAV,EAAgB,OAAhB,CAAlB;AACA,0BAAM,IAAN;AACH,iBAJM,CAAP;AAKH;AACJ,SAjDgC;AAkDjC,kBAAU,IAlDuB;AAmDjC,sBAAc,IAnDmB;AAoDjC,oBAAY;AApDqB,KAArC;AAuDA,WAAO,cAAP,CAAsB,EAAE,EAAF,CAAK,KAA3B,EAAkC,UAAlC,EAA8C;AAC1C,eAAO,MAAM,cAD6B;AAE1C,kBAAU,IAFgC;AAG1C,sBAAc,IAH4B;AAI1C,oBAAY;AAJ8B,KAA9C;AAMH,CAjED,EAiEG,MAjEH,EAiEW,MAjEX","file":"jquery.dirty.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJqcXVlcnkuZC50cyIsInNvdXJjZXNDb250ZW50IjpbXX0=","\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJqcXVlcnkuZGlydHkuZC50cyIsInNvdXJjZXNDb250ZW50IjpbXX0=","/// <reference path=\"./jquery.d.ts\" />\n/// <reference path=\"./jquery.dirty.d.ts\" />\n\n/** The Dirty class */\nclass Dirty {\n\n    private static singleDs : Dirty[] = [];\n\n    private dirty = \"dirty\";\n    private clean = \"clean\";\n    private dataInitialValue = \"dirtyInitialValue\";\n    private dataIsDirty = \"isDirty\";\n\n    form: JQuery<HTMLElement>;\n    isDirty: boolean;\n    options: JqueryDirtyOptions;\n    history: string[];\n    id: string;\n    submitting: boolean;\n    /**\n     *\n     */\n    constructor(form:JQuery<HTMLElement>, options:JqueryDirtyOptions) {\n        this.form = form;\n        this.isDirty = false;\n        this.options = options;\n        this.history = [this.clean, this.clean]; // keep track of last statuses\n        this.id = $(form).attr(\"id\");\n        this.submitting = false;\n        Dirty.singleDs.push(this);\n    }\n\n    public static DefaultOptions:JqueryDirtyOptions = {\n        preventLeaving: false,\n        leavingMessage: \"There are unsaved changes on this page which will be discarded if you continue.\",\n        onDirty: $.noop, // this function is fired when the form gets dirty\n        onClean: $.noop, // this funciton is fired when the form gets clean again\n        fireEventsOnEachChange: false, // fire onDirty/onClean on each modification of the form\n    };\n\n    public static getSingleton = (id:string):Dirty => {\n        return Dirty.singleDs.find((d, i) => d.id === id);\n    }\n\n    public init = () => {\n        this.saveInitialValues();\n        this.setEvents();\n    }\n\n    public getElementsInForm = ():(HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement)[] => {\n        let elements:(HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement)[] = [];\n\n        let inputs:NodeListOf<HTMLInputElement> = this.form[0].querySelectorAll(\"input\");\n        let selects:NodeListOf<HTMLSelectElement> = this.form[0].querySelectorAll(\"select\");\n        let textareas:NodeListOf<HTMLTextAreaElement> = this.form[0].querySelectorAll(\"textarea\");\n\n        for (let index:number = 0; index < inputs.length; index++) {\n            elements.push(inputs[index]);\n        }\n\n        for (let index:number = 0; index < selects.length; index++) {\n            elements.push(selects[index]);\n        }\n\n        for (let index:number = 0; index < textareas.length; index++) {\n            elements.push(textareas[index]);\n        }\n\n        return elements;\n    }\n\n    public isRadioOrCheckbox = (el:HTMLInputElement) => {\n        return [\"radio\", \"checkbox\"].some(e => e === el.type);\n    }\n\n    public isFileInput = (el:HTMLInputElement) => el.type === \"file\";\n\n    public setSubmitEvents = () => {\n        this.form.on(\"submit\", () => this.submitting = true);\n\n        if (this.options.preventLeaving) {\n            $(window).on(\"beforeunload\", () => {\n                if (this.isDirty && !this.submitting) {\n                    return this.options.leavingMessage;\n                }\n            });\n        }\n    }\n\n    public setNamespacedEventTriggers = () => {\n        this.form.find(\"input, select, textarea\").on(\"change click keyup keydown blur\", (e) => {\n            $(this).trigger(e.type + \".dirty\");\n        });\n    }\n\n    public setNamespacedEvents = () => {\n        this.form.find(\"input, select, textarea\").on(\"change.dirty click.dirty keyup.dirty keydown.dirty blur.dirty\", (e) => {\n            this.checkValues(e);\n        });\n\n        this.form.on(\"dirty\", () => this.options.onDirty());\n        this.form.on(\"clean\", () => this.options.onClean());\n    }\n\n    public clearNamespacedEvents = () => {\n        this.form.find(\"input, select, textarea\").off(\"change.dirty click.dirty keyup.dirty keydown.dirty blur.dirty\");\n        this.form.off(\"dirty\");\n        this.form.off(\"clean\");\n    }\n\n    public saveInitialValues  = () => {\n        this.getElementsInForm().forEach((e:HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n\n            let isRadioOrCheckbox:boolean = this.isRadioOrCheckbox(<HTMLInputElement>e);\n            let isFile:boolean = this.isFileInput(<HTMLInputElement>e);\n\n            if (isRadioOrCheckbox) {\n                let isChecked:string = $(e).is(\":checked\") ? \"checked\" : \"unchecked\";\n                $(e).data(this.dataInitialValue, isChecked);\n            } else if(isFile) {\n                $(e).data(this.dataInitialValue, JSON.stringify((<HTMLInputElement>e).files));\n            } else {\n                $(e).data(this.dataInitialValue, $(e).val() || \"\");\n            }\n        });\n    }\n\n    public refreshEvents= () => {\n        this.clearNamespacedEvents();\n        this.setNamespacedEvents();\n    }\n\n    public showDirtyFields = (): (HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement)[] => {\n        return this.getElementsInForm().filter((e:HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n            return $(e).data(\"isDirty\") as boolean;\n        });\n    }\n\n    public setEvents = () => {\n        this.setSubmitEvents();\n        this.setNamespacedEvents();\n        this.setNamespacedEventTriggers();\n    }\n\n    public isFieldDirty = (field: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n\n        let $field:JQuery = $(field);\n\n        // explicitly check for null/undefined here as value may be `false`, so ($field.data(dataInitialValue) || '') would not work\n        let initialValue:string = $field.data(this.dataInitialValue) as string;\n        if (initialValue == null) { initialValue = \"\"; }\n\n        let currentValue:string = $field.val() as string;\n        if (currentValue == null) { currentValue = \"\"; }\n\n        // boolean values can be encoded as \"true/false\" or \"True/False\" depending on underlying frameworks\n        // we need a case insensitive comparison\n        let boolRegex:RegExp = /^(true|false)$/i;\n        let isBoolValue:boolean = boolRegex.test(initialValue) && boolRegex.test(currentValue);\n        if (isBoolValue) {\n            let regex:RegExp = new RegExp(\"^\" + initialValue + \"$\", \"i\");\n            return !regex.test(currentValue);\n        }\n\n        return currentValue !== initialValue;\n    }\n\n    public isFileInputDirty= (field: HTMLInputElement) => {\n        let initialValue:string = $(field).data(this.dataInitialValue) as string;\n        let currentValue:string = JSON.stringify(field.files);\n\n        return currentValue !== initialValue;\n    }\n\n    public isCheckboxDirty= (field: HTMLInputElement) => {\n        let initialValue:string = $(field).data(this.dataInitialValue) as string;\n        let currentValue:string = field.checked ? \"checked\" : \"unchecked\";\n\n        return initialValue !== currentValue;\n    }\n\n    public isElementDirty = (e: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n\n        let thisIsDirty:boolean = false;\n\n        let isInput:boolean = e instanceof HTMLInputElement;\n        if (isInput) {\n            let el:HTMLInputElement = <HTMLInputElement>e;\n            let isRadioOrCheckbox:boolean = this.isRadioOrCheckbox(el);\n            let isFile:boolean = this.isFileInput(el);\n\n\n            if (isRadioOrCheckbox) {\n                thisIsDirty = this.isCheckboxDirty(el);\n            } else if (isFile) {\n                thisIsDirty = this.isFileInputDirty(el);\n            } else {\n                thisIsDirty = this.isFieldDirty(e);\n            }\n        }\n\n        return thisIsDirty;\n\n    }\n\n    public checkValues = (e?:JQuery.Event<HTMLElement, null>) => {\n\n        let elements:(HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement)[] = this.getElementsInForm();\n        let formIsDirty:boolean = this.isDirty;\n\n        elements.forEach((el) => {\n            let thisIsDirty:boolean = this.isElementDirty(el);\n\n            $(el).data(this.dataIsDirty, thisIsDirty);\n\n            formIsDirty = formIsDirty || thisIsDirty;\n        });\n\n        if (formIsDirty) {\n            this.setAsDirty();\n        } else {\n            this.setAsClean();\n        }\n\n        if (e) {\n            e.stopImmediatePropagation();\n        }\n    }\n\n    setDirty = () => {\n        this.isDirty = true;\n        this.history[0] = this.history[1];\n        this.history[1] = this.dirty;\n\n        if (this.options.fireEventsOnEachChange || this.wasJustClean()) {\n            this.form.trigger(\"dirty\");\n        }\n    }\n\n    setClean = () => {\n        this.isDirty = false;\n        this.history[0] = this.history[1];\n        this.history[1] = this.clean;\n\n        if (this.options.fireEventsOnEachChange || this.wasJustDirty()) {\n            this.form.trigger(\"clean\");\n        }\n    }\n\n    private wasJustDirty = () => (this.history[0] === this.dirty);\n\n    private wasJustClean = () => (this.history[0] === this.clean);\n\n    public setAsClean = () => {\n        this.saveInitialValues();\n        this.setClean();\n    }\n\n    public setAsDirty = () => {\n        this.setDirty();\n    }\n\n    public resetForm = () => {\n        this.getElementsInForm().forEach((e:HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) => {\n\n            let $e:JQuery<HTMLElement> = $(e);\n            let isRadioOrCheckbox:boolean = this.isRadioOrCheckbox(<HTMLInputElement>e);\n            let isFileInput:boolean = this.isFileInput(<HTMLInputElement>e);\n\n            if (isRadioOrCheckbox) {\n                let initialCheckedState:string = $e.data(this.dataInitialValue) as string;\n                let isChecked:boolean = initialCheckedState === \"checked\";\n\n                $e.prop(\"checked\", isChecked);\n            } else if(isFileInput) {\n                let e1:HTMLInputElement = e as HTMLInputElement;\n                e1.files = new FileList();\n            } else {\n                let value:string = $e.data(this.dataInitialValue) as string;\n                $e.val(value);\n            }\n        });\n\n        this.checkValues();\n    }\n}\n\n/*\n * Dirty\n * jquery plugin to detect when a form is modified\n * (c) 2016 Simon Taite - https://github.com/simontaite/jquery.dirty\n * originally based on jquery.dirrty by Ruben Torres - https://github.com/rubentd/dirrty\n * Released under the MIT license\n */\n\n(function(w:Window, $:JQueryStatic):any {\n    // no jQuery around\n    if (!$) { return false; }\n\n    Object.defineProperty($.fn, \"dirty\", {\n        value: function(this:JQuery, options?:(JqueryDirtyOptions|string)):any {\n\n            function isString(o:JqueryDirtyOptions|string): o is string {\n                return typeof o === \"string\";\n            }\n\n            if (isString(options)) {\n\n                var d:Dirty = Dirty.getSingleton($(this).attr(\"id\"));\n\n                if (d === undefined) {\n                    d = new Dirty($(this), Dirty.DefaultOptions);\n                    d.init();\n                }\n\n                var optionsLowerCase:string = options.toLowerCase();\n\n                switch (optionsLowerCase) {\n                case \"isclean\":\n                    return !d.isDirty;\n                case \"isdirty\":\n                    return d.isDirty;\n                case \"refreshevents\":\n                    d.refreshEvents();\n                case \"resetform\":\n                    d.resetForm();\n                case \"setasclean\":\n                    return d.setAsClean();\n                case \"setasdirty\":\n                    return d.setAsDirty();\n                case \"showdirtyfields\":\n                    return d.showDirtyFields();\n                default:\n                    console.log(\"Unknown option: \" + options);\n                }\n            } else {\n                // defaults\n                var defaults:JqueryDirtyOptions = Dirty.DefaultOptions;\n\n                // extend the defaults\n                let opts:JqueryDirtyOptions = $.extend({}, defaults, options);\n\n                return this.each(function(_:number, e:HTMLElement):void {\n                    let options:JqueryDirtyOptions = $.extend({}, defaults, opts);\n                    var dirty:Dirty = new Dirty($(e), options);\n                    dirty.init();\n                });\n            }\n        },\n        writable: true,\n        configurable: true,\n        enumerable: false}\n    );\n\n    Object.defineProperty($.fn.dirty, \"defaults\", {\n        value: Dirty.DefaultOptions,\n        writable: true,\n        configurable: true,\n        enumerable: false}\n    );\n})(window, jQuery);\n\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanF1ZXJ5LmQudHMiLCJzcmMvanF1ZXJ5LmRpcnR5LmQudHMiLCJzcmMvanF1ZXJ5LmRpcnR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTs7QUNEQTtBQUNBOzs7Ozs7O0FDQUE7QUFFQTtJQUNBLEs7QUFlSTs7O0FBR0EsZUFBWSxJQUFaLEVBQXNDLE9BQXRDLEVBQWdFO0FBQUE7O0FBQUE7O0FBZHhELFNBQUEsS0FBQSxHQUFRLE9BQVI7QUFDQSxTQUFBLEtBQUEsR0FBUSxPQUFSO0FBQ0EsU0FBQSxnQkFBQSxHQUFtQixtQkFBbkI7QUFDQSxTQUFBLFdBQUEsR0FBYyxTQUFkO0FBaUNELFNBQUEsSUFBQSxHQUFPLFlBQUs7QUFDZixjQUFLLGlCQUFMO0FBQ0EsY0FBSyxTQUFMO0FBQ0gsS0FITTtBQUtBLFNBQUEsaUJBQUEsR0FBb0IsWUFBb0U7QUFDM0YsWUFBSSxXQUEwRSxFQUE5RTtBQUVBLFlBQUksU0FBc0MsTUFBSyxJQUFMLENBQVUsQ0FBVixFQUFhLGdCQUFiLENBQThCLE9BQTlCLENBQTFDO0FBQ0EsWUFBSSxVQUF3QyxNQUFLLElBQUwsQ0FBVSxDQUFWLEVBQWEsZ0JBQWIsQ0FBOEIsUUFBOUIsQ0FBNUM7QUFDQSxZQUFJLFlBQTRDLE1BQUssSUFBTCxDQUFVLENBQVYsRUFBYSxnQkFBYixDQUE4QixVQUE5QixDQUFoRDtBQUVBLGFBQUssSUFBSSxRQUFlLENBQXhCLEVBQTJCLFFBQVEsT0FBTyxNQUExQyxFQUFrRCxPQUFsRCxFQUEyRDtBQUN2RCxxQkFBUyxJQUFULENBQWMsT0FBTyxLQUFQLENBQWQ7QUFDSDtBQUVELGFBQUssSUFBSSxTQUFlLENBQXhCLEVBQTJCLFNBQVEsUUFBUSxNQUEzQyxFQUFtRCxRQUFuRCxFQUE0RDtBQUN4RCxxQkFBUyxJQUFULENBQWMsUUFBUSxNQUFSLENBQWQ7QUFDSDtBQUVELGFBQUssSUFB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RTFDLGtCQUFVLElBRmdDO0FBRzFDLHNCQUFjLElBSDRCO0FBSTFDLG9CQUFZO0FBSjhCLEtBQTlDO0FBTUgsQ0FqRUQsRUFpRUcsTUFqRUgsRUFpRVcsTUFqRVgiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJcInVzZSBzdHJpY3RcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYlhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWlJc0ltWnBiR1VpT2lKcWNYVmxjbmt1WkM1MGN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJYWDA9IiwiXCJ1c2Ugc3RyaWN0XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklpSXNJbVpwYkdVaU9pSnFjWFZsY25rdVpHbHlkSGt1WkM1MGN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJYWDA9IiwiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vanF1ZXJ5LmQudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vanF1ZXJ5LmRpcnR5LmQudHNcIiAvPlxuXG4vKiogVGhlIERpcnR5IGNsYXNzICovXG5jbGFzcyBEaXJ0eSB7XG5cbiAgICBwcml2YXRlIHN0YXRpYyBzaW5nbGVEcyA6IERpcnR5W10gPSBbXTtcblxuICAgIHByaXZhdGUgZGlydHkgPSBcImRpcnR5XCI7XG4gICAgcHJpdmF0ZSBjbGVhbiA9IFwiY2xlYW5cIjtcbiAgICBwcml2YXRlIGRhdGFJbml0aWFsVmFsdWUgPSBcImRpcnR5SW5pdGlhbFZhbHVlXCI7XG4gICAgcHJpdmF0ZSBkYXRhSXNEaXJ0eSA9IFwiaXNEaXJ0eVwiO1xuXG4gICAgZm9ybTogSlF1ZXJ5PEhUTUxFbGVtZW50PjtcbiAgICBpc0RpcnR5OiBib29sZWFuO1xuICAgIG9wdGlvbnM6IEpxdWVyeURpcnR5T3B0aW9ucztcbiAgICBoaXN0b3J5OiBzdHJpbmdbXTtcbiAgICBpZDogc3RyaW5nO1xuICAgIHN1Ym1pdHRpbmc6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihmb3JtOkpRdWVyeTxIVE1MRWxlbWVudD4sIG9wdGlvbnM6SnF1ZXJ5RGlydHlPcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZm9ybSA9IGZvcm07XG4gICAgICAgIHRoaXMuaXNEaXJ0eSA9IGZhbHNlO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB0aGlzLmhpc3RvcnkgPSBbdGhpcy5jbGVhbiwgdGhpcy5jbGVhbl07IC8vIGtlZXAgdHJhY2sgb2YgbGFzdCBzdGF0dXNlc1xuICAgICAgICB0aGlzLmlkID0gJChmb3JtKS5hdHRyKFwiaWRcIik7XG4gICAgICAgIHRoaXMuc3VibWl0dGluZyA9IGZhbHNlO1xuICAgICAgICBEaXJ0eS5zaW5nbGVEcy5wdXNoKHRoaXMpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgRGVmYXVsdE9wdGlvbnM6SnF1ZXJ5RGlydHlPcHRpb25zID0ge1xuICAgICAgICBwcmV2ZW50TGVhdmluZzogZmFsc2UsXG4gICAgICAgIGxlYXZpbmdNZXNzYWdlOiBcIlRoZXJlIGFyZSB1bnNhdmVkIGNoYW5nZXMgb24gdGhpcyBwYWdlIHdoaWNoIHdpbGwgYmUgZGlzY2FyZGVkIGlmIHlvdSBjb250aW51ZS5cIixcbiAgICAgICAgb25EaXJ0eTogJC5ub29wLCAvLyB0aGlzIGZ1bmN0aW9uIGlzIGZpcmVkIHdoZW4gdGhlIGZvcm0gZ2V0cyBkaXJ0eVxuICAgICAgICBvbkNsZWFuOiAkLm5vb3AsIC8vIHRoaXMgZnVuY2l0b24gaXMgZmlyZWQgd2hlbiB0aGUgZm9ybSBnZXRzIGNsZWFuIGFnYWluXG4gICAgICAgIGZpcmVFdmVudHNPbkVhY2hDaGFuZ2U6IGZhbHNlLCAvLyBmaXJlIG9uRGlydHkvb25DbGVhbiBvbiBlYWNoIG1vZGlmaWNhdGlvbiBvZiB0aGUgZm9ybVxuICAgIH07XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldFNpbmdsZXRvbiA9IChpZDpzdHJpbmcpOkRpcnR5ID0+IHtcbiAgICAgICAgcmV0dXJuIERpcnR5LnNpbmdsZURzLmZpbmQoKGQsIGkpID0+IGQuaWQgPT09IGlkKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaW5pdCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zYXZlSW5pdGlhbFZhbHVlcygpO1xuICAgICAgICB0aGlzLnNldEV2ZW50cygpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRFbGVtZW50c0luRm9ybSA9ICgpOihIVE1MSW5wdXRFbGVtZW50IHwgSFRNTFNlbGVjdEVsZW1lbnQgfCBIVE1MVGV4dEFyZWFFbGVtZW50KVtdID0+IHtcbiAgICAgICAgbGV0IGVsZW1lbnRzOihIVE1MSW5wdXRFbGVtZW50IHwgSFRNTFNlbGVjdEVsZW1lbnQgfCBIVE1MVGV4dEFyZWFFbGVtZW50KVtdID0gW107XG5cbiAgICAgICAgbGV0IGlucHV0czpOb2RlTGlzdE9mPEhUTUxJbnB1dEVsZW1lbnQ+ID0gdGhpcy5mb3JtWzBdLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFwiKTtcbiAgICAgICAgbGV0IHNlbGVjdHM6Tm9kZUxpc3RPZjxIVE1MU2VsZWN0RWxlbWVudD4gPSB0aGlzLmZvcm1bMF0ucXVlcnlTZWxlY3RvckFsbChcInNlbGVjdFwiKTtcbiAgICAgICAgbGV0IHRleHRhcmVhczpOb2RlTGlzdE9mPEhUTUxUZXh0QXJlYUVsZW1lbnQ+ID0gdGhpcy5mb3JtWzBdLnF1ZXJ5U2VsZWN0b3JBbGwoXCJ0ZXh0YXJlYVwiKTtcblxuICAgICAgICBmb3IgKGxldCBpbmRleDpudW1iZXIgPSAwOyBpbmRleCA8IGlucHV0cy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgIGVsZW1lbnRzLnB1c2goaW5wdXRzW2luZGV4XSk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGxldCBpbmRleDpudW1iZXIgPSAwOyBpbmRleCA8IHNlbGVjdHMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICBlbGVtZW50cy5wdXNoKHNlbGVjdHNbaW5kZXhdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAobGV0IGluZGV4Om51bWJlciA9IDA7IGluZGV4IDwgdGV4dGFyZWFzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgZWxlbWVudHMucHVzaCh0ZXh0YXJlYXNbaW5kZXhdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBlbGVtZW50cztcbiAgICB9XG5cbiAgICBwdWJsaWMgaXNSYWRpb09yQ2hlY2tib3ggPSAoZWw6SFRNTElucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICByZXR1cm4gW1wicmFkaW9cIiwgXCJjaGVja2JveFwiXS5zb21lKGUgPT4gZSA9PT0gZWwudHlwZSk7XG4gICAgfVxuXG4gICAgcHVibGljIGlzRmlsZUlucHV0ID0gKGVsOkhUTUxJbnB1dEVsZW1lbnQpID0+IGVsLnR5cGUgPT09IFwiZmlsZVwiO1xuXG4gICAgcHVibGljIHNldFN1Ym1pdEV2ZW50cyA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5mb3JtLm9uKFwic3VibWl0XCIsICgpID0+IHRoaXMuc3VibWl0dGluZyA9IHRydWUpO1xuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMucHJldmVudExlYXZpbmcpIHtcbiAgICAgICAgICAgICQod2luZG93KS5vbihcImJlZm9yZXVubG9hZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNEaXJ0eSAmJiAhdGhpcy5zdWJtaXR0aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMubGVhdmluZ01lc3NhZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0TmFtZXNwYWNlZEV2ZW50VHJpZ2dlcnMgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuZm9ybS5maW5kKFwiaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWFcIikub24oXCJjaGFuZ2UgY2xpY2sga2V5dXAga2V5ZG93biBibHVyXCIsIChlKSA9PiB7XG4gICAgICAgICAgICAkKHRoaXMpLnRyaWdnZXIoZS50eXBlICsgXCIuZGlydHlcIik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXROYW1lc3BhY2VkRXZlbnRzID0gKCkgPT4ge1xuICAgICAgICB0aGlzLmZvcm0uZmluZChcImlucHV0LCBzZWxlY3QsIHRleHRhcmVhXCIpLm9uKFwiY2hhbmdlLmRpcnR5IGNsaWNrLmRpcnR5IGtleXVwLmRpcnR5IGtleWRvd24uZGlydHkgYmx1ci5kaXJ0eVwiLCAoZSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jaGVja1ZhbHVlcyhlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5mb3JtLm9uKFwiZGlydHlcIiwgKCkgPT4gdGhpcy5vcHRpb25zLm9uRGlydHkoKSk7XG4gICAgICAgIHRoaXMuZm9ybS5vbihcImNsZWFuXCIsICgpID0+IHRoaXMub3B0aW9ucy5vbkNsZWFuKCkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBjbGVhck5hbWVzcGFjZWRFdmVudHMgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuZm9ybS5maW5kKFwiaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWFcIikub2ZmKFwiY2hhbmdlLmRpcnR5IGNsaWNrLmRpcnR5IGtleXVwLmRpcnR5IGtleWRvd24uZGlydHkgYmx1ci5kaXJ0eVwiKTtcbiAgICAgICAgdGhpcy5mb3JtLm9mZihcImRpcnR5XCIpO1xuICAgICAgICB0aGlzLmZvcm0ub2ZmKFwiY2xlYW5cIik7XG4gICAgfVxuXG4gICAgcHVibGljIHNhdmVJbml0aWFsVmFsdWVzICA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5nZXRFbGVtZW50c0luRm9ybSgpLmZvckVhY2goKGU6SFRNTElucHV0RWxlbWVudCB8IEhUTUxTZWxlY3RFbGVtZW50IHwgSFRNTFRleHRBcmVhRWxlbWVudCkgPT4ge1xuXG4gICAgICAgICAgICBsZXQgaXNSYWRpb09yQ2hlY2tib3g6Ym9vbGVhbiA9IHRoaXMuaXNSYWRpb09yQ2hlY2tib3goPEhUTUxJbnB1dEVsZW1lbnQ+ZSk7XG4gICAgICAgICAgICBsZXQgaXNGaWxlOmJvb2xlYW4gPSB0aGlzLmlzRmlsZUlucHV0KDxIVE1MSW5wdXRFbGVtZW50PmUpO1xuXG4gICAgICAgICAgICBpZiAoaXNSYWRpb09yQ2hlY2tib3gpIHtcbiAgICAgICAgICAgICAgICBsZXQgaXNDaGVja2VkOnN0cmluZyA9ICQoZSkuaXMoXCI6Y2hlY2tlZFwiKSA/IFwiY2hlY2tlZFwiIDogXCJ1bmNoZWNrZWRcIjtcbiAgICAgICAgICAgICAgICAkKGUpLmRhdGEodGhpcy5kYXRhSW5pdGlhbFZhbHVlLCBpc0NoZWNrZWQpO1xuICAgICAgICAgICAgfSBlbHNlIGlmKGlzRmlsZSkge1xuICAgICAgICAgICAgICAgICQoZSkuZGF0YSh0aGlzLmRhdGFJbml0aWFsVmFsdWUsIEpTT04uc3RyaW5naWZ5KCg8SFRNTElucHV0RWxlbWVudD5lKS5maWxlcykpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAkKGUpLmRhdGEodGhpcy5kYXRhSW5pdGlhbFZhbHVlLCAkKGUpLnZhbCgpIHx8IFwiXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVmcmVzaEV2ZW50cz0gKCkgPT4ge1xuICAgICAgICB0aGlzLmNsZWFyTmFtZXNwYWNlZEV2ZW50cygpO1xuICAgICAgICB0aGlzLnNldE5hbWVzcGFjZWRFdmVudHMoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvd0RpcnR5RmllbGRzID0gKCk6IChIVE1MSW5wdXRFbGVtZW50IHwgSFRNTFNlbGVjdEVsZW1lbnQgfCBIVE1MVGV4dEFyZWFFbGVtZW50KVtdID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RWxlbWVudHNJbkZvcm0oKS5maWx0ZXIoKGU6SFRNTElucHV0RWxlbWVudCB8IEhUTUxTZWxlY3RFbGVtZW50IHwgSFRNTFRleHRBcmVhRWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICQoZSkuZGF0YShcImlzRGlydHlcIikgYXMgYm9vbGVhbjtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldEV2ZW50cyA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdWJtaXRFdmVudHMoKTtcbiAgICAgICAgdGhpcy5zZXROYW1lc3BhY2VkRXZlbnRzKCk7XG4gICAgICAgIHRoaXMuc2V0TmFtZXNwYWNlZEV2ZW50VHJpZ2dlcnMoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaXNGaWVsZERpcnR5ID0gKGZpZWxkOiBIVE1MSW5wdXRFbGVtZW50IHwgSFRNTFNlbGVjdEVsZW1lbnQgfCBIVE1MVGV4dEFyZWFFbGVtZW50KSA9PiB7XG5cbiAgICAgICAgbGV0ICRmaWVsZDpKUXVlcnkgPSAkKGZpZWxkKTtcblxuICAgICAgICAvLyBleHBsaWNpdGx5IGNoZWNrIGZvciBudWxsL3VuZGVmaW5lZCBoZXJlIGFzIHZhbHVlIG1heSBiZSBgZmFsc2VgLCBzbyAoJGZpZWxkLmRhdGEoZGF0YUluaXRpYWxWYWx1ZSkgfHwgJycpIHdvdWxkIG5vdCB3b3JrXG4gICAgICAgIGxldCBpbml0aWFsVmFsdWU6c3RyaW5nID0gJGZpZWxkLmRhdGEodGhpcy5kYXRhSW5pdGlhbFZhbHVlKSBhcyBzdHJpbmc7XG4gICAgICAgIGlmIChpbml0aWFsVmFsdWUgPT0gbnVsbCkgeyBpbml0aWFsVmFsdWUgPSBcIlwiOyB9XG5cbiAgICAgICAgbGV0IGN1cnJlbnRWYWx1ZTpzdHJpbmcgPSAkZmllbGQudmFsKCkgYXMgc3RyaW5nO1xuICAgICAgICBpZiAoY3VycmVudFZhbHVlID09IG51bGwpIHsgY3VycmVudFZhbHVlID0gXCJcIjsgfVxuXG4gICAgICAgIC8vIGJvb2xlYW4gdmFsdWVzIGNhbiBiZSBlbmNvZGVkIGFzIFwidHJ1ZS9mYWxzZVwiIG9yIFwiVHJ1ZS9GYWxzZVwiIGRlcGVuZGluZyBvbiB1bmRlcmx5aW5nIGZyYW1ld29ya3NcbiAgICAgICAgLy8gd2UgbmVlZCBhIGNhc2UgaW5zZW5zaXRpdmUgY29tcGFyaXNvblxuICAgICAgICBsZXQgYm9vbFJlZ2V4OlJlZ0V4cCA9IC9eKHRydWV8ZmFsc2UpJC9pO1xuICAgICAgICBsZXQgaXNCb29sVmFsdWU6Ym9vbGVhbiA9IGJvb2xSZWdleC50ZXN0KGluaXRpYWxWYWx1ZSkgJiYgYm9vbFJlZ2V4LnRlc3QoY3VycmVudFZhbHVlKTtcbiAgICAgICAgaWYgKGlzQm9vbFZhbHVlKSB7XG4gICAgICAgICAgICBsZXQgcmVnZXg6UmVnRXhwID0gbmV3IFJlZ0V4cChcIl5cIiArIGluaXRpYWxWYWx1ZSArIFwiJFwiLCBcImlcIik7XG4gICAgICAgICAgICByZXR1cm4gIXJlZ2V4LnRlc3QoY3VycmVudFZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjdXJyZW50VmFsdWUgIT09IGluaXRpYWxWYWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaXNGaWxlSW5wdXREaXJ0eT0gKGZpZWxkOiBIVE1MSW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICAgIGxldCBpbml0aWFsVmFsdWU6c3RyaW5nID0gJChmaWVsZCkuZGF0YSh0aGlzLmRhdGFJbml0aWFsVmFsdWUpIGFzIHN0cmluZztcbiAgICAgICAgbGV0IGN1cnJlbnRWYWx1ZTpzdHJpbmcgPSBKU09OLnN0cmluZ2lmeShmaWVsZC5maWxlcyk7XG5cbiAgICAgICAgcmV0dXJuIGN1cnJlbnRWYWx1ZSAhPT0gaW5pdGlhbFZhbHVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBpc0NoZWNrYm94RGlydHk9IChmaWVsZDogSFRNTElucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICBsZXQgaW5pdGlhbFZhbHVlOnN0cmluZyA9ICQoZmllbGQpLmRhdGEodGhpcy5kYXRhSW5pdGlhbFZhbHVlKSBhcyBzdHJpbmc7XG4gICAgICAgIGxldCBjdXJyZW50VmFsdWU6c3RyaW5nID0gZmllbGQuY2hlY2tlZCA/IFwiY2hlY2tlZFwiIDogXCJ1bmNoZWNrZWRcIjtcblxuICAgICAgICByZXR1cm4gaW5pdGlhbFZhbHVlICE9PSBjdXJyZW50VmFsdWU7XG4gICAgfVxuXG4gICAgcHVibGljIGlzRWxlbWVudERpcnR5ID0gKGU6IEhUTUxJbnB1dEVsZW1lbnQgfCBIVE1MU2VsZWN0RWxlbWVudCB8IEhUTUxUZXh0QXJlYUVsZW1lbnQpID0+IHtcblxuICAgICAgICBsZXQgdGhpc0lzRGlydHk6Ym9vbGVhbiA9IGZhbHNlO1xuXG4gICAgICAgIGxldCBpc0lucHV0OmJvb2xlYW4gPSBlIGluc3RhbmNlb2YgSFRNTElucHV0RWxlbWVudDtcbiAgICAgICAgaWYgKGlzSW5wdXQpIHtcbiAgICAgICAgICAgIGxldCBlbDpIVE1MSW5wdXRFbGVtZW50ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZTtcbiAgICAgICAgICAgIGxldCBpc1JhZGlvT3JDaGVja2JveDpib29sZWFuID0gdGhpcy5pc1JhZGlvT3JDaGVja2JveChlbCk7XG4gICAgICAgICAgICBsZXQgaXNGaWxlOmJvb2xlYW4gPSB0aGlzLmlzRmlsZUlucHV0KGVsKTtcblxuXG4gICAgICAgICAgICBpZiAoaXNSYWRpb09yQ2hlY2tib3gpIHtcbiAgICAgICAgICAgICAgICB0aGlzSXNEaXJ0eSA9IHRoaXMuaXNDaGVja2JveERpcnR5KGVsKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNGaWxlKSB7XG4gICAgICAgICAgICAgICAgdGhpc0lzRGlydHkgPSB0aGlzLmlzRmlsZUlucHV0RGlydHkoZWwpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzSXNEaXJ0eSA9IHRoaXMuaXNGaWVsZERpcnR5KGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXNJc0RpcnR5O1xuXG4gICAgfVxuXG4gICAgcHVibGljIGNoZWNrVmFsdWVzID0gKGU/OkpRdWVyeS5FdmVudDxIVE1MRWxlbWVudCwgbnVsbD4pID0+IHtcblxuICAgICAgICBsZXQgZWxlbWVudHM6KEhUTUxJbnB1dEVsZW1lbnQgfCBIVE1MU2VsZWN0RWxlbWVudCB8IEhUTUxUZXh0QXJlYUVsZW1lbnQpW10gPSB0aGlzLmdldEVsZW1lbnRzSW5Gb3JtKCk7XG4gICAgICAgIGxldCBmb3JtSXNEaXJ0eTpib29sZWFuID0gdGhpcy5pc0RpcnR5O1xuXG4gICAgICAgIGVsZW1lbnRzLmZvckVhY2goKGVsKSA9PiB7XG4gICAgICAgICAgICBsZXQgdGhpc0lzRGlydHk6Ym9vbGVhbiA9IHRoaXMuaXNFbGVtZW50RGlydHkoZWwpO1xuXG4gICAgICAgICAgICAkKGVsKS5kYXRhKHRoaXMuZGF0YUlzRGlydHksIHRoaXNJc0RpcnR5KTtcblxuICAgICAgICAgICAgZm9ybUlzRGlydHkgPSBmb3JtSXNEaXJ0eSB8fCB0aGlzSXNEaXJ0eTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGZvcm1Jc0RpcnR5KSB7XG4gICAgICAgICAgICB0aGlzLnNldEFzRGlydHkoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2V0QXNDbGVhbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGUpIHtcbiAgICAgICAgICAgIGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZXREaXJ0eSA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5pc0RpcnR5ID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5oaXN0b3J5WzBdID0gdGhpcy5oaXN0b3J5WzFdO1xuICAgICAgICB0aGlzLmhpc3RvcnlbMV0gPSB0aGlzLmRpcnR5O1xuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZmlyZUV2ZW50c09uRWFjaENoYW5nZSB8fCB0aGlzLndhc0p1c3RDbGVhbigpKSB7XG4gICAgICAgICAgICB0aGlzLmZvcm0udHJpZ2dlcihcImRpcnR5XCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0Q2xlYW4gPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuaXNEaXJ0eSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmhpc3RvcnlbMF0gPSB0aGlzLmhpc3RvcnlbMV07XG4gICAgICAgIHRoaXMuaGlzdG9yeVsxXSA9IHRoaXMuY2xlYW47XG5cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5maXJlRXZlbnRzT25FYWNoQ2hhbmdlIHx8IHRoaXMud2FzSnVzdERpcnR5KCkpIHtcbiAgICAgICAgICAgIHRoaXMuZm9ybS50cmlnZ2VyKFwiY2xlYW5cIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIHdhc0p1c3REaXJ0eSA9ICgpID0+ICh0aGlzLmhpc3RvcnlbMF0gPT09IHRoaXMuZGlydHkpO1xuXG4gICAgcHJpdmF0ZSB3YXNKdXN0Q2xlYW4gPSAoKSA9PiAodGhpcy5oaXN0b3J5WzBdID09PSB0aGlzLmNsZWFuKTtcblxuICAgIHB1YmxpYyBzZXRBc0NsZWFuID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNhdmVJbml0aWFsVmFsdWVzKCk7XG4gICAgICAgIHRoaXMuc2V0Q2xlYW4oKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0QXNEaXJ0eSA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zZXREaXJ0eSgpO1xuICAgIH1cblxuICAgIHB1YmxpYyByZXNldEZvcm0gPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuZ2V0RWxlbWVudHNJbkZvcm0oKS5mb3JFYWNoKChlOkhUTUxJbnB1dEVsZW1lbnQgfCBIVE1MU2VsZWN0RWxlbWVudCB8IEhUTUxUZXh0QXJlYUVsZW1lbnQpID0+IHtcblxuICAgICAgICAgICAgbGV0ICRlOkpRdWVyeTxIVE1MRWxlbWVudD4gPSAkKGUpO1xuICAgICAgICAgICAgbGV0IGlzUmFkaW9PckNoZWNrYm94OmJvb2xlYW4gPSB0aGlzLmlzUmFkaW9PckNoZWNrYm94KDxIVE1MSW5wdXRFbGVtZW50PmUpO1xuICAgICAgICAgICAgbGV0IGlzRmlsZUlucHV0OmJvb2xlYW4gPSB0aGlzLmlzRmlsZUlucHV0KDxIVE1MSW5wdXRFbGVtZW50PmUpO1xuXG4gICAgICAgICAgICBpZiAoaXNSYWRpb09yQ2hlY2tib3gpIHtcbiAgICAgICAgICAgICAgICBsZXQgaW5pdGlhbENoZWNrZWRTdGF0ZTpzdHJpbmcgPSAkZS5kYXRhKHRoaXMuZGF0YUluaXRpYWxWYWx1ZSkgYXMgc3RyaW5nO1xuICAgICAgICAgICAgICAgIGxldCBpc0NoZWNrZWQ6Ym9vbGVhbiA9IGluaXRpYWxDaGVja2VkU3RhdGUgPT09IFwiY2hlY2tlZFwiO1xuXG4gICAgICAgICAgICAgICAgJGUucHJvcChcImNoZWNrZWRcIiwgaXNDaGVja2VkKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZihpc0ZpbGVJbnB1dCkge1xuICAgICAgICAgICAgICAgIGxldCBlMTpIVE1MSW5wdXRFbGVtZW50ID0gZSBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgICAgICAgICAgIGUxLmZpbGVzID0gbmV3IEZpbGVMaXN0KCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGxldCB2YWx1ZTpzdHJpbmcgPSAkZS5kYXRhKHRoaXMuZGF0YUluaXRpYWxWYWx1ZSkgYXMgc3RyaW5nO1xuICAgICAgICAgICAgICAgICRlLnZhbCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuY2hlY2tWYWx1ZXMoKTtcbiAgICB9XG59XG5cbi8qXG4gKiBEaXJ0eVxuICoganF1ZXJ5IHBsdWdpbiB0byBkZXRlY3Qgd2hlbiBhIGZvcm0gaXMgbW9kaWZpZWRcbiAqIChjKSAyMDE2IFNpbW9uIFRhaXRlIC0gaHR0cHM6Ly9naXRodWIuY29tL3NpbW9udGFpdGUvanF1ZXJ5LmRpcnR5XG4gKiBvcmlnaW5hbGx5IGJhc2VkIG9uIGpxdWVyeS5kaXJydHkgYnkgUnViZW4gVG9ycmVzIC0gaHR0cHM6Ly9naXRodWIuY29tL3J1YmVudGQvZGlycnR5XG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqL1xuXG4oZnVuY3Rpb24odzpXaW5kb3csICQ6SlF1ZXJ5U3RhdGljKTphbnkge1xuICAgIC8vIG5vIGpRdWVyeSBhcm91bmRcbiAgICBpZiAoISQpIHsgcmV0dXJuIGZhbHNlOyB9XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoJC5mbiwgXCJkaXJ0eVwiLCB7XG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbih0aGlzOkpRdWVyeSwgb3B0aW9ucz86KEpxdWVyeURpcnR5T3B0aW9uc3xzdHJpbmcpKTphbnkge1xuXG4gICAgICAgICAgICBmdW5jdGlvbiBpc1N0cmluZyhvOkpxdWVyeURpcnR5T3B0aW9uc3xzdHJpbmcpOiBvIGlzIHN0cmluZyB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiBvID09PSBcInN0cmluZ1wiO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoaXNTdHJpbmcob3B0aW9ucykpIHtcblxuICAgICAgICAgICAgICAgIHZhciBkOkRpcnR5ID0gRGlydHkuZ2V0U2luZ2xldG9uKCQodGhpcykuYXR0cihcImlkXCIpKTtcblxuICAgICAgICAgICAgICAgIGlmIChkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZCA9IG5ldyBEaXJ0eSgkKHRoaXMpLCBEaXJ0eS5EZWZhdWx0T3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgIGQuaW5pdCgpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBvcHRpb25zTG93ZXJDYXNlOnN0cmluZyA9IG9wdGlvbnMudG9Mb3dlckNhc2UoKTtcblxuICAgICAgICAgICAgICAgIHN3aXRjaCAob3B0aW9uc0xvd2VyQ2FzZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJpc2NsZWFuXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhZC5pc0RpcnR5O1xuICAgICAgICAgICAgICAgIGNhc2UgXCJpc2RpcnR5XCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkLmlzRGlydHk7XG4gICAgICAgICAgICAgICAgY2FzZSBcInJlZnJlc2hldmVudHNcIjpcbiAgICAgICAgICAgICAgICAgICAgZC5yZWZyZXNoRXZlbnRzKCk7XG4gICAgICAgICAgICAgICAgY2FzZSBcInJlc2V0Zm9ybVwiOlxuICAgICAgICAgICAgICAgICAgICBkLnJlc2V0Rm9ybSgpO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzZXRhc2NsZWFuXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkLnNldEFzQ2xlYW4oKTtcbiAgICAgICAgICAgICAgICBjYXNlIFwic2V0YXNkaXJ0eVwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZC5zZXRBc0RpcnR5KCk7XG4gICAgICAgICAgICAgICAgY2FzZSBcInNob3dkaXJ0eWZpZWxkc1wiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZC5zaG93RGlydHlGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlVua25vd24gb3B0aW9uOiBcIiArIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gZGVmYXVsdHNcbiAgICAgICAgICAgICAgICB2YXIgZGVmYXVsdHM6SnF1ZXJ5RGlydHlPcHRpb25zID0gRGlydHkuRGVmYXVsdE9wdGlvbnM7XG5cbiAgICAgICAgICAgICAgICAvLyBleHRlbmQgdGhlIGRlZmF1bHRzXG4gICAgICAgICAgICAgICAgbGV0IG9wdHM6SnF1ZXJ5RGlydHlPcHRpb25zID0gJC5leHRlbmQoe30sIGRlZmF1bHRzLCBvcHRpb25zKTtcblxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oXzpudW1iZXIsIGU6SFRNTEVsZW1lbnQpOnZvaWQge1xuICAgICAgICAgICAgICAgICAgICBsZXQgb3B0aW9uczpKcXVlcnlEaXJ0eU9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgZGVmYXVsdHMsIG9wdHMpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGlydHk6RGlydHkgPSBuZXcgRGlydHkoJChlKSwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgIGRpcnR5LmluaXQoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2V9XG4gICAgKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSgkLmZuLmRpcnR5LCBcImRlZmF1bHRzXCIsIHtcbiAgICAgICAgdmFsdWU6IERpcnR5LkRlZmF1bHRPcHRpb25zLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZX1cbiAgICApO1xufSkod2luZG93LCBqUXVlcnkpO1xuXG4iXX0="}